<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1080,5223" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Extracting data from ACME&#xA;&#xA;Create a process that automates extracting the data from ACME Work items page. &#xA;&#xA;Open https://acme-test.uipath.com/login using IE and login (note: if you do not have an account, go to https://acme-test.uipath.com/register first and create one).&#xA;Click on the Work Items tab.&#xA;Use Data scrape wizard to extract the table from all the pages. Ignore the empty columns.&#xA;Save the extracted data into a CSV file.&#xA;Close browser." DisplayName="Sequence Main" sap:VirtualizedContainerService.HintSize="992,5158" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="username" Name="username" />
      <Variable x:TypeArguments="x:String" Default="https://acme-test.uipath.com/login" Name="url" />
      <Variable x:TypeArguments="sd:DataTable" Name="dataTable" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Sequence Initialization" sap:VirtualizedContainerService.HintSize="930,227" sap2010:WorkflowViewState.IdRef="Sequence_31">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign Initialization" sap:VirtualizedContainerService.HintSize="479,116" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">username</mca:CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <TryCatch DisplayName="Try Catch Main" sap:VirtualizedContainerService.HintSize="930,4641" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Sequence Try Catch Main" sap:VirtualizedContainerService.HintSize="892,4199" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="Select a .csv file to save the data to." Name="messageCSV" />
            <Variable x:TypeArguments="x:String" Name="filePath" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence File Path" sap:VirtualizedContainerService.HintSize="830,366" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box File Select" sap:VirtualizedContainerService.HintSize="388,85" sap2010:WorkflowViewState.IdRef="MessageBox_2">
              <ui:MessageBox.Text>
                <InArgument x:TypeArguments="x:Object">
                  <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">messageCSV</mca:CSharpValue>
                </InArgument>
              </ui:MessageBox.Text>
            </ui:MessageBox>
            <ui:SelectFile DisplayName="Select File" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="388,138" sap2010:WorkflowViewState.IdRef="SelectFile_2">
              <ui:SelectFile.SelectedFile>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">filePath</mca:CSharpReference>
                </OutArgument>
              </ui:SelectFile.SelectedFile>
            </ui:SelectFile>
          </Sequence>
          <Sequence DisplayName="Sequence Browser" sap:VirtualizedContainerService.HintSize="830,3508" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:Browser" Name="browserSession" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" BrowserType="Firefox" DisplayName="Open Browser &amp; Login" sap:VirtualizedContainerService.HintSize="768,3340" sap2010:WorkflowViewState.IdRef="OpenBrowser_1">
              <ui:OpenBrowser.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Sequence Scrape" sap:VirtualizedContainerService.HintSize="734,3215" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Do Browser Items" sap:VirtualizedContainerService.HintSize="672,3107" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:UiElement" Name="hasNextPage" />
                        <Variable x:TypeArguments="x:Boolean" Name="isLoggedIn" />
                        <Variable x:TypeArguments="x:Boolean" Name="workItemNavExists" />
                        <Variable x:TypeArguments="x:Boolean" Name="dataExists" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Sequence Log In Check" sap:VirtualizedContainerService.HintSize="610,1239" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:UiElementExists DisplayName="Element Exists 'A  https://acme-test.ui...'" sap:VirtualizedContainerService.HintSize="484,107" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                          <ui:UiElementExists.Exists>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">isLoggedIn</mca:CSharpReference>
                            </OutArgument>
                          </ui:UiElementExists.Exists>
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b4a88f1d-60e0-459e-a8a4-244be6b12a9c" InformativeScreenshot="4be16f5c80577543c05eb15b1f7219ae" Selector="&lt;webctrl tag='A' innertext='Log Out' /&gt;" TimeoutMS="500">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If DisplayName="If !IsLoggedIn" sap:VirtualizedContainerService.HintSize="484,989" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">isLoggedIn == false</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Sequence Login" sap:VirtualizedContainerService.HintSize="416,802" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ss:SecureString" Name="password" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="acme-test.uipath.com" CacheStrategy="None" DisplayName="Get Credential" FolderPath="DEV" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1">
                                <ui:GetRobotCredential.Password>
                                  <OutArgument x:TypeArguments="ss:SecureString">
                                    <mca:CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">password</mca:CSharpReference>
                                  </OutArgument>
                                </ui:GetRobotCredential.Password>
                                <ui:GetRobotCredential.Username>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">username</mca:CSharpReference>
                                  </OutArgument>
                                </ui:GetRobotCredential.Username>
                              </ui:GetRobotCredential>
                              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  email'" EmptyField="True" sap:VirtualizedContainerService.HintSize="354,155" sap2010:WorkflowViewState.IdRef="TypeInto_6">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9772201d-26e8-40d1-903e-530c0d226eeb" InformativeScreenshot="1742bd9602b384bf568498b95f11718f" Selector="&lt;webctrl tag='INPUT' type='email' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                                <ui:TypeInto.Text>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">username</mca:CSharpValue>
                                  </InArgument>
                                </ui:TypeInto.Text>
                              </ui:TypeInto>
                              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="354,155" sap2010:WorkflowViewState.IdRef="TypeInto_7">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9772201d-26e8-40d1-903e-530c0d226eeb" InformativeScreenshot="3d1bfee498eb4285c14db9aface0ff7d" Selector="&lt;webctrl tag='INPUT' type='password' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                                <ui:TypeInto.Text>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">new System.Net.NetworkCredential("", password).Password</mca:CSharpValue>
                                  </InArgument>
                                </ui:TypeInto.Text>
                              </ui:TypeInto>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON' Login" sap:VirtualizedContainerService.HintSize="354,107" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="05fd1e01-8bda-43f1-8d5b-b3c811646626" InformativeScreenshot="caae8db39de6df5bc7d1df4822735d5e" Selector="&lt;webctrl tag='BUTTON' type='submit' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Sequence Work Item Button" sap:VirtualizedContainerService.HintSize="610,652" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:UiElementExists DisplayName="Element Exists 'BUTTON'" sap:VirtualizedContainerService.HintSize="484,107" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                          <ui:UiElementExists.Exists>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">workItemNavExists</mca:CSharpReference>
                            </OutArgument>
                          </ui:UiElementExists.Exists>
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="865e0502-87a0-4df0-9bd2-834dc800cf18" InformativeScreenshot="00ee8d9a0b48f61cc2549cf3afc9d92c" Selector="&lt;webctrl tag='BUTTON' innertext='                          Work Items' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If DisplayName="If Work Item Navigation Button Exists" sap:VirtualizedContainerService.HintSize="484,402" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">workItemNavExists</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Sequence Work Item Button Click" sap:VirtualizedContainerService.HintSize="416,215" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click 'BUTTON' Work Items" sap:VirtualizedContainerService.HintSize="354,107" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0c7a8614-00b5-4752-b837-63a78549d8f3" InformativeScreenshot="a2d6a4fb76e25655d288be805b57dc80" Selector="&lt;webctrl parentid='dashmenu' tag='BUTTON' innertext='                          Work Items' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Sequence Data Table Exists" sap:VirtualizedContainerService.HintSize="610,902" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:UiElementExists DisplayName="Element Exists 'DIV'" sap:VirtualizedContainerService.HintSize="548,107" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                          <ui:UiElementExists.Exists>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">dataExists</mca:CSharpReference>
                            </OutArgument>
                          </ui:UiElementExists.Exists>
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="85fc3662-acb6-4e38-a006-b9cf39fc3404" InformativeScreenshot="f01e7798e920dc872beaafd698e8f1a0" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div' idx='2' tag='DIV' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If DisplayName="If Data Table Exists" sap:VirtualizedContainerService.HintSize="548,652" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">dataExists</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Sequence Data Scraping" sap:VirtualizedContainerService.HintSize="512,465" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'A'" sap:VirtualizedContainerService.HintSize="450,107" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b5fb7d40-3c43-4931-baac-db93d071ec8e" InformativeScreenshot="e6bbf2d6583e0efda0aa9f7ba4f662ca" Selector="&lt;webctrl aaname='1' tag='A' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,218" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExtractData DelayBetweenPagesMS="{x:Null}" ContinueOnError="True" DisplayName="Extract Structured Data 'TABLE'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="ExtractData_6" MaxNumberOfResults="0" NextLinkSelector="&lt;webctrl aaname='&amp;gt;' tag='A' /&gt;" SimulateClick="True">
                                  <ui:ExtractData.DataTable>
                                    <InOutArgument x:TypeArguments="sd:DataTable">
                                      <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">dataTable</mca:CSharpReference>
                                    </InOutArgument>
                                  </ui:ExtractData.DataTable>
                                  <ui:ExtractData.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="03b28615-06a1-4c63-b522-9c52866acd18" InformativeScreenshot="813542e8f650a9764d73d33799025b77" Selector="&lt;webctrl tag='TABLE' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
                                  </ui:ExtractData.Target>
                                </ui:ExtractData>
                              </Sequence>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Logout" sap:VirtualizedContainerService.HintSize="610,107" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f470008b-c50d-493b-8b95-f639d5a63957" InformativeScreenshot="bf898e440cdd911497a65b6747051ac7" Selector="&lt;webctrl aaname='Log Out' parentid='bs-example-navbar-collapse-1' tag='A' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:OpenBrowser.Body>
              <ui:OpenBrowser.UiBrowser>
                <OutArgument x:TypeArguments="ui:Browser">
                  <mca:CSharpReference x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">browserSession</mca:CSharpReference>
                </OutArgument>
              </ui:OpenBrowser.UiBrowser>
              <ui:OpenBrowser.Url>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">url</mca:CSharpValue>
                </InArgument>
              </ui:OpenBrowser.Url>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:OpenBrowser>
            <ui:CloseTab DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="768,25" sap2010:WorkflowViewState.IdRef="CloseTab_1">
              <ui:CloseTab.Browser>
                <InArgument x:TypeArguments="ui:Browser">
                  <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">browserSession</mca:CSharpValue>
                </InArgument>
              </ui:CloseTab.Browser>
            </ui:CloseTab>
          </Sequence>
          <ui:WriteCsvFile AddHeaders="True" Delimitator="Comma" DisplayName="Write CSV" sap:VirtualizedContainerService.HintSize="830,153" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" ShouldQuote="True">
            <ui:WriteCsvFile.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">dataTable</mca:CSharpValue>
              </InArgument>
            </ui:WriteCsvFile.DataTable>
            <ui:WriteCsvFile.FilePath>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">filePath</mca:CSharpValue>
              </InArgument>
            </ui:WriteCsvFile.FilePath>
          </ui:WriteCsvFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="896,131" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_2">
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">"There was an exception: " + exception</mca:CSharpValue>
              </InArgument>
            </WriteLine>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>